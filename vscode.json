{
  // Configure file associations to languages (e.g. '*.extension': 'html'). These have precedence over the default associations of the languages installed.
  "files.associations": {
    "*.sass": "sass",
    "*.html": "html"
  },

  // Configure glob patterns for excluding files and folders.
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/.DS_Store": true,
    "**/*.pyc": true,
    "**/node_modules/": true,
    "**/__pycache__/": true,
    "**/.venv/": true,
    "**/*.sqlite3": true,
    "**/nltk/**": true,
    "**/.eggs/**": true
  },

  // Configure glob patterns of file paths to exclude from file watching. Changing this setting requires a restart. When you experience Code consuming lots of cpu time on startup, you can exclude large folders to reduce the initial load.
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.venv/**": true,
    "**/nltk/**": true,
    "**/.egg/**": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/.DS_Store": true,
    "**/*.pyc": true,
    "**/node_modules/": true,
    "**/__pycache__/": true,
    "**/*.sqlite3": true
  },

  // Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the files.exclude setting.
  "search.exclude": {
    "**/.git/objects/**": true,
    "**/.venv/**": true,
    "**/nltk/**": true,
    "**/.egg/**": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/.DS_Store": true,
    "**/*.pyc": true,
    "**/node_modules/": true,
    "**/__pycache__/": true,
    "**/*.sqlite3": true
  },

  // Controls how the editor should render whitespace characters, possibilities are 'none', 'boundary', and 'all'. The 'boundary' option does not render single spaces between words.
  "editor.renderWhitespace": "all",

  // Controls whether the editor should render control characters
  "editor.renderControlCharacters": true,

  // Controls whether the editor should render indent guides
  "editor.renderIndentGuides": true,

  // Controls if suggestions should automatically show up while typing
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },

  // Controls if the minimap is shown
  "editor.minimap.enabled": false,

  // The default end of line character. Use \n for LF and \r\n for CRLF.
  "files.eol": "\n",

  // When enabled, will trim trailing whitespace when saving a file.
  "files.trimTrailingWhitespace": true,

  // When enabled, insert a final new line at the end of the file when saving it.
  "files.insertFinalNewline": true,

  // Format and indent {{#foo}} and {{/foo}}.
  "html.format.indentHandlebars": true,

 // Whether to lint Python files using pep8
  "python.linting.pep8Enabled": false,

  // The number of spaces a tab is equal to. This setting is overriden based on the file contents when `editor.detectIndentation` is on.
  "editor.tabSize": 4,

  // Path to Python, you can use a custom version of Python by modifying this setting to include the full path.
  "python.pythonPath": "~/.pyenv/versions/${workspaceFolderBasename}/bin/python",

  // Whether to lint Python files using prospector.
  "python.linting.prospectorEnabled": true,

  // Patterns used to exclude files or folders from being linted.
  "python.linting.ignorePatterns": [
    ".vscode/*.py",
    "**/site-packages/",
    "**/migrations/"
  ],

  // Controls which editor is shown at startup, if none are restored from the previous session.
  //  - none: Start without an editor.
  //  - welcomePage: Open the Welcome page (default).
  //  - newUntitledFile: Open a new untitled file (only applies when opening an empty workspace).
  "workbench.startupEditor": "newUntitledFile",

  // Do not use duplicate style definitions.
  "css.lint.duplicateProperties": "error",

  // Do not use empty rulesets.
  "css.lint.emptyRules": "error",

  // Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.
  "css.lint.float": "warning",

  // Hex colors must consist of three or six hex numbers.
  "css.lint.hexColorLength": "error",

  // Selectors should not contain IDs because these rules are too tightly coupled with the HTML.
  "css.lint.idSelector": "error",

  // Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.
  "css.lint.important": "error",

  // Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.
  "css.lint.propertyIgnoredDueToDisplay": "warning",

  // The universal selector (`*`) is known to be slow.
  "css.lint.universalSelector": "error",

  // Unknown at-rule.
  "css.lint.unknownAtRules": "error",

  // Unknown property.
  "css.lint.unknownProperties": "error",

  // When using a vendor-specific prefix, also include the standard property.
  "css.lint.vendorPrefix": "warning",

  // No unit for zero needed.
  "css.lint.zeroUnits": "error",

  "[python]": {
    "editor.tabSize": 4
  },
  "[css]": {
    "editor.tabSize": 2
  },
  "[sass]": {
    "editor.tabSize": 2
  },
  "[html]": {
    "editor.tabSize": 2
  },
}
